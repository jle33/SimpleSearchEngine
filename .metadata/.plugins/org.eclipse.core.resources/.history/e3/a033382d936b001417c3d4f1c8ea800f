package SearchComponents;

import java.util.ArrayList;

/**
 * Created by dzung on 10/9/2014.
 */
public class SyntaxCheck {


    private static int countPlus(String s) {

        int num = 0;
        String newS, temp;
        int num2 = -1;
        int num3 = -1;
        int num5 = -3;
        ArrayList<String> arrL = new ArrayList<String>();
        newS = s;

        while(newS.length() > 0){
            if (newS.contains("+")){
                newS = newS.substring(newS.indexOf("+")+ 1,newS.length());
                num++;
            }
            else break;
        }

        return num;
    }

    public static String QuerySyntaxCheck (String strQuery) {

        String delims, strStatus = "Ok";
        String[] tokens;
        int firstPos, secondPos, count;
        String q;


        if (strQuery.contains("+")) {

            if (strQuery.startsWith("+"))
                strStatus = "Error: cannot start with '+'";
            else if (strQuery.endsWith("+"))
                strStatus = "Error: cannot end with '+'";
            else {

                delims = "[ + ]+";
                tokens = strQuery.split(delims);
                count = countPlus(strQuery);
                if (tokens.length <= count) {
                    strStatus = "Error: query must be Q1 + Q2";
                }
            }
        }
        else if (strQuery.contains("\"")) {

            //printOut(strStatus);
            firstPos = strQuery.indexOf("\"");
            StringBuilder temp = new StringBuilder(strQuery);
            temp.setCharAt(firstPos,'$');
            secondPos = temp.indexOf("\"");
            if (secondPos < 0)        // query syntax checking
                strStatus = "Error: missing left '\"'";

        }
        else if (strQuery.contains("(")) {

            firstPos = strQuery.indexOf("(");
            StringBuilder temp = new StringBuilder(strQuery);
            temp.setCharAt(firstPos,'$');
            secondPos = temp.indexOf(")");
            if (secondPos < 0) {       // query syntax checking
                strStatus = "Error: missing right parenthesis";

            }
            else {
                q = temp.toString();
                strStatus= QuerySyntaxCheck(q);
            }
        }

        return strStatus;
    }


}
package SearchComponents;

import java.util.ArrayList;

/**
 * Created by dzung on 10/9/2014.
 */
public class SyntaxCheck {


    private static int countPlus(String s) {

        int num = 0;
        String newS, temp;
        int num2 = -1;
        int num3 = -1;
        int num5 = -3;
        ArrayList<String> arrL = new ArrayList<String>();
        newS = s;

        while(newS.length() > 0){
            if (newS.contains("+")){
                newS = newS.substring(newS.indexOf("+")+ 1,newS.length());
                num++;
            }
            else break;
        }

        return num;
    }

    public static String QuerySyntaxCheck (String strQuery) {

        String delims, strStatus = "Ok";
        String[] tokens;
        int firstPos, secondPos, count;
        String q;


        if (strQuery.contains("+")) {

            if (strQuery.startsWith("+"))
                strStatus = "Error: cannot start with '+'";
            else if (strQuery.endsWith("+"))
                strStatus = "Error: cannot end with '+'";
            else {

                delims = "[ + ]+";
                tokens = strQuery.split(delims);
                count = countPlus(strQuery);
                if (tokens.length <= count) {
                    strStatus = "Error: query must be Q1 + Q2";
                }
            }
        }
        else if (strQuery.contains("\"")) {

            //printOut(strStatus);
            firstPos = strQuery.indexOf("\"");
            StringBuilder temp = new StringBuilder(strQuery);
            temp.setCharAt(firstPos,'$');
            secondPos = temp.indexOf("\"");
            if (secondPos < 0)        // query syntax checking
                strStatus = "Error: missing left '\"'";

        }
        else if (strQuery.contains("(")) {

            firstPos = strQuery.indexOf("(");
            StringBuilder temp = new StringBuilder(strQuery);
            temp.setCharAt(firstPos,'$');
            secondPos = temp.indexOf(")");
            if (secondPos < 0) {       // query syntax checking
                strStatus = "Error: missing right parenthesis";

            }
            else {
                q = temp.toString();
                strStatus= QuerySyntaxCheck(q);
            }
        }

        return strStatus;
    }


}
